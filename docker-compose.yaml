---
version: '3'

networks:
  frontend:
    external: true
  backend:
    external: true

services:
  cloudflare:
    container_name: cloudflare
    hostname: cloudflare
    image: cloudflare/cloudflared
    env_file: ../.env
    restart: unless-stopped
    command: tunnel --no-autoupdate run
    environment:
      - TUNNEL_TOKEN=$TOKEN
    networks:
      - frontend
      - backend

  NPM:
    container_name: npm
    hostname: npm
    image: jc21/nginx-proxy-manager
    environment:
      DB_MYSQL_HOST: $NPM_DB_NAME
      DB_MYSQL_PORT: $MARIADB_PORT
      DB_MYSQL_USER: $MARIADB_USER
      DB_MYSQL_PASSWORD: $MARIADB_ROOT_PASSWORD
      DB_MYSQL_NAME: "npm"
      DISABLE_IPV6: 'true'
    volumes:
      - ${CONFIG_PATH}/npm/data:/data
      - ${CONFIG_PATH}/npm/letsencrypt:/etc/letsencrypt
    restart: unless-stopped
    ports:
      - '443:443' # Public HTTPS Port
      - '81:81' # Admin Web Port
    networks:
      - frontend
    depends_on:
      - mariadb

  homeassistant:
    container_name: homeassistant
    hostname: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    env_file: ../.env
    volumes:
      - ${CONFIG_PATH}/hass/Configs/hassio:/config
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    privileged: true
    ports:
      - 8123:8123
    networks:
      - frontend
    depends_on:
      - mariadb
      - mosquitto
  
  mariadb:
    container_name: mariadb
    hostname: mariadb
    image: mariadb:latest
    env_file: ../.env
    environment:
       MARIADB_DATABASE: $MARIADB_DB_NAME
       MARIADB_ROOT_PASSWORD: $MARIADB_ROOT_PASSWORD
       MARIADB_USER: $MARIADB_USER
       MARIADB_PASSWORD: $MARIADB_PASSWORD
       PUID: $PUID
       PGID: $PGID
       TZ: $TZ
    volumes: 
      - ${CONFIG_PATH}/mariadb/config/:/etc/mysql/conf.d
      - ${CONFIG_PATH}/mariadb:/var/lib/mysql
    restart: unless-stopped
    networks:
      - frontend
    ports:
      - 3306:3306

  nodered:
    container_name: nodered
    hostname: nodered
    image: nodered/node-red
    volumes:
      - ${CONFIG_PATH}/nodered:/data
    environment:
       PUID: $PUID
       PGID: $PGID
       TZ: $TZ
    restart: unless-stopped
    ports:
      - "1880:1880"
    networks:
      - frontend
    depends_on:
      - homeassistant
      - mosquitto

  mosquitto:
    container_name: mosquitto
    hostname: mosquitto
    image: eclipse-mosquitto
    env_file: ../.env
    environment:
       PUID: $PUID
       PGID: $PGID
       TZ: $TZ
    volumes:
      - ${CONFIG_PATH}/mosquitto/config:/mosquitto/config
      - ${CONFIG_PATH}/mosquitto/data:/mosquitto/data
      - ${CONFIG_PATH}/mosquitto/log:/mosquitto/log
    restart: unless-stopped
    ports:
      - "1883:1883/tcp"
    networks:
      - frontend
    stdin_open: true
    tty: true

  traefik:
    image: traefik:latest
    container_name: traefik
    hostname: traefik
    environment:
      - CF_API_EMAIL=$CF_API_EMAIL
      - CF_API_KEY=$YOUR_API_KEY
    volumes:
      - /etc/localtime:etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro      
      - ${CONFIG_PATH}/traefik/data/traefik.yml:/traefik.yml.ro
      - ${CONFIG_PATH}/traefik/data/acme.json:/acme.json
      - ${CONFIG_PATH}/traefik/data/config.yml:/config.yml:ro
    restart: unless-stopped
    networks:
      - frontend
    ports:
      - 80:80
      - 443:443

  #   labels:
  #     traefik.enable: true
  #     traefik.http.routers.traefik-http.entrypoints: http
  #     traefik.http.routers.traefik.rule: Host(`traefik.domain.tld`)
  #     traefik.http.middlewares.traefik-auth.basicauth.users: BASIC_AUTH_PASSWORD
  #     traefik.http.middlewares.traefik-https.redirect.redirectscheme: https
  #     traefik.http.middlewares.sslheader.headers.customrequests.X-Fordwarded-Proto: https
  #     traefik.http.routers.traefik.middlewares: traeefik-https-redirect
  #     traefik.http.routers.traefik.secure.entrypoints: https
  #     traefik.http.routers.traefik.secure.rule: Host(`traefik.domain.tld`)
  #     traefik.http.routers.traefik-secure-middlewares: traefik-auth
  #     traefik.http.routers.traefik-secure.tls: true
  #     traefik.http.routers.traefik-secure.tls.certresolver: "cloudflare"
  #     traefik.http.services.traefik.secure.services: api@internal
  #     traefik.http.services.traefik.loadbalancer.server.port: "3579"